{"uuid":"16a3ce19-59d2-4817-8e82-700df3758e89","historyId":"c8d56f692dabbdc4c56d86acf27d046b","testCaseId":"[engine:junit-jupiter]/[class:UiTests.tests.auth.RegisterTests]/[test-template:negativeRegistration(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)]","testCaseName":"negativeRegistration(String, String, String, String, String)","fullName":"UiTests.tests.auth.RegisterTests.negativeRegistration","labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:UiTests.tests.auth.RegisterTests]/[test-template:negativeRegistration(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)]/[test-template-invocation:#10]"},{"name":"host","value":"DESKTOP-7SJ24SJ"},{"name":"thread","value":"9996@DESKTOP-7SJ24SJ.main(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"UiTests.tests.auth.RegisterTests"},{"name":"testClass","value":"UiTests.tests.auth.RegisterTests"},{"name":"testMethod","value":"negativeRegistration"},{"name":"suite","value":"UiTests.tests.auth.RegisterTests"}],"links":[],"name":"negativeRegistration(String, String, String, String, String) XSS в username","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"\r\nMultiple Failures (1 failure)\r\n-- failure 1 --\r\n[Сообщение об ошибке для кейса «XSS в username»] \r\nExpecting actual:\r\n  \"Invalid username. Usernames can only contain lowercase letters, numbers, and single hyphens, must be between 3 and 39 characters, and cannot start or end with a hyphen.\"\r\nto contain:\r\n  \"qwdqdq\"\r\n (ignoring case)\r\nat RegisterTests.negativeRegistration(RegisterTests.java:133)","trace":"org.assertj.core.error.AssertJMultipleFailuresError: \r\nMultiple Failures (1 failure)\r\n-- failure 1 --\r\n[Сообщение об ошибке для кейса «XSS в username»] \r\nExpecting actual:\r\n  \"Invalid username. Usernames can only contain lowercase letters, numbers, and single hyphens, must be between 3 and 39 characters, and cannot start or end with a hyphen.\"\r\nto contain:\r\n  \"qwdqdq\"\r\n (ignoring case)\r\nat RegisterTests.negativeRegistration(RegisterTests.java:133)\r\n\tat UiTests.tests.auth.RegisterTests.negativeRegistration(RegisterTests.java:135)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\r\n\tat java.base/java.util.stream.ReferencePipeline$Head.forEach(ReferencePipeline.java:762)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:276)\r\n\tat java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)\r\n\tat java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\r\n"},"stage":"finished","description":"","steps":[],"attachments":[],"parameters":[{"name":"UniqueId","value":"[engine:junit-jupiter]/[class:UiTests.tests.auth.RegisterTests]/[test-template:negativeRegistration(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)]/[test-template-invocation:#10]","mode":"hidden"}],"start":1752664121020,"stop":1752664126483}