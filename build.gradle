plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

dependencies {
    // JUnit
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testImplementation 'org.junit.platform:junit-platform-suite:1.10.0'

    // Тестовые библиотеки
    testImplementation 'com.codeborne:selenide:6.19.1'
    testImplementation 'io.rest-assured:rest-assured:5.3.2'
    testImplementation 'com.github.javafaker:javafaker:1.0.2'
    testImplementation 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation 'org.slf4j:slf4j-simple:2.0.9'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
    testImplementation 'org.assertj:assertj-core:3.26.0'
    testImplementation 'io.github.bonigarcia:webdrivermanager:5.9.2'

    // Allure
    testImplementation 'io.qameta.allure:allure-junit5:2.25.0'
}

allure {
    version = '2.25.0'
    useJUnit5 {
        version = '2.25.0'
    }
}

// ---------- UI TEST: Chrome ----------
tasks.register("uiTestChrome", Test) {
    description = "Run UI tests on Chrome"
    group = "verification"
    useJUnitPlatform {
        includeTags "ui"
    }
    systemProperty "browser", "chrome"
    systemProperty "allure.results.directory", "$buildDir/allure-results-chrome"
    outputs.upToDateWhen { false }
    doFirst {
        copy {
            from "src/test/resources/categories.json"
            into "$buildDir/allure-results-chrome"
        }
        copy {
            from "src/test/resources/executor-chrome.json"
            into "$buildDir/allure-results-chrome"
            rename('executor-chrome.json', 'executor.json')
        }
        copy {
            from "src/test/resources/environment-chrome.properties"
            into "$buildDir/allure-results-chrome"
            rename('environment-chrome.properties', 'environment.properties')
        }
    }
}

// ---------- UI TEST: Firefox ----------
tasks.register("uiTestFirefox", Test) {
    description = "Run UI tests on Firefox"
    group = "verification"
    useJUnitPlatform {
        includeTags "ui"
    }
    systemProperty "browser", "firefox"
    systemProperty "allure.results.directory", "$buildDir/allure-results-firefox"
    outputs.upToDateWhen { false }
    doFirst {
        copy {
            from "src/test/resources/categories.json"
            into "$buildDir/allure-results-firefox"
        }
        copy {
            from "src/test/resources/executor-firefox.json"
            into "$buildDir/allure-results-firefox"
            rename('executor-firefox.json', 'executor.json')
        }
        copy {
            from "src/test/resources/environment-firefox.properties"
            into "$buildDir/allure-results-firefox"
            rename('environment-firefox.properties', 'environment.properties')
        }
    }
}

// ---------- API TEST ----------
tasks.register("apiTestRun", Test) {
    description = "Run API tests"
    group = "verification"
    useJUnitPlatform {
        includeTags "api"
    }
    systemProperty "allure.results.directory", "$buildDir/allure-results-api"
    outputs.upToDateWhen { false }
    doFirst {
        copy {
            from "src/test/resources/categories.json"
            into "$buildDir/allure-results-api"
        }
        copy {
            from "src/test/resources/executor-api.json"
            into "$buildDir/allure-results-api"
            rename('executor-api.json', 'executor.json')
        }
        copy {
            from "src/test/resources/environment-api.properties"
            into "$buildDir/allure-results-api"
            rename('environment-api.properties', 'environment.properties')
        }
    }
}

// ---------- Combined Task ----------
tasks.register("uiTest") {
    description = "Run all UI tests"
    group = "verification"
    dependsOn("uiTestChrome", "uiTestFirefox")
}

// ---------- Merge and Generate Allure Report ----------
tasks.register("generateMergedAllureReport") {
    description = "Generate merged Allure report"
    group = "verification"
    dependsOn("uiTestChrome", "uiTestFirefox", "apiTestRun")
    doLast {
        exec {
            commandLine 'allure', 'generate',
                    "$buildDir/allure-results-chrome",
                    "$buildDir/allure-results-firefox",
                    "$buildDir/allure-results-api",
                    '-o', "$buildDir/allure-report",
                    '--clean'
        }
        println "✅ Allure report generated at $buildDir/allure-report"
    }
}

// ---------- Make Check Depend on Everything ----------
tasks.named("check") {
    dependsOn("generateMergedAllureReport")
}
