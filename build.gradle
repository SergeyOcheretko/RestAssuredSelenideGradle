plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

dependencies {
    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    testImplementation 'com.codeborne:selenide:6.19.1'
    testImplementation 'io.rest-assured:rest-assured:5.3.2'
    testImplementation 'com.github.javafaker:javafaker:1.0.2'
    testImplementation 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testImplementation 'org.slf4j:slf4j-simple:2.0.9'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
    testImplementation 'org.assertj:assertj-core:3.26.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.3'
    testImplementation 'io.github.bonigarcia:webdrivermanager:5.9.2'
    testImplementation 'org.junit.platform:junit-platform-launcher:1.10.3'
    testImplementation 'org.junit.platform:junit-platform-suite:1.10.0'
    testImplementation 'org.junit.platform:junit-platform-suite-engine:1.10.0'
    testRuntimeOnly   'org.junit.platform:junit-platform-suite-engine:1.10.0'
    testImplementation 'io.qameta.allure:allure-junit5:2.25.0'
}

allure {
    autoconfigure = true
    aspectjweaver = true
    version = '2.25.0'
    useJUnit5 {
        version = '2.25.0'
    }
}

tasks.withType(Test) {
    useJUnitPlatform()


    def excludeProp = System.getProperty('excludeTags')
    if (excludeProp) {
        def excludes = excludeProp.split(',') as String[]
        filter {
            excludeTags(*excludes)
        }
    }

    testLogging {
        events "passed", "failed", "skipped"
        exceptionFormat "full"
    }
}

tasks.register("smokeTest", Test) {
    useJUnitPlatform { includeTags "smoke" }
}

tasks.register("regressionTest", Test) {
    useJUnitPlatform { includeTags "regression" }
}

tasks.register("apiTest", Test) {
    useJUnitPlatform { includeTags "api" }
}
