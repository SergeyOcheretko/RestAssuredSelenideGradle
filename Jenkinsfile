pipeline {
    agent any

    environment {
        JAVA_TOOL_OPTIONS = '-Dfile.encoding=UTF-8'
        GRADLE_USER_HOME  = 'C:\\temp\\gradle-cache'
        GRID_URL          = 'http://localhost:4444/wd/hub'
    }

    stages {

        stage('Checkout') {
            steps {
                echo 'üì• –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...'
                checkout scm
            }
        }

       stage('Cleanup Docker') {
           steps {
               echo 'üßº –£–¥–∞–ª—è–µ–º –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã (Windows CMD)...'
               bat '''
               FOR /F "tokens=*" %%i IN (`docker ps -a --filter "status=exited" -q`) DO docker rm %%i
               '''
           }
       }


        stage('Start Selenium Grid') {
            steps {
                script {
                    echo 'üê≥ –ü–æ–¥–Ω–∏–º–∞–µ–º Selenium Grid...'
                    bat 'docker compose -f docker-compose.yml up -d'
                }
            }
        }

        stage('Wait Grid Ready') {
            steps {
                script {
                    powershell '''
                    $attempt = 0
                    do {
                        $attempt++
                        try {
                            $r = Invoke-WebRequest -Uri "http://localhost:4444/wd/hub/status" -UseBasicParsing -TimeoutSec 5
                            if ($r.Content -match '"ready":true') { exit 0 }
                        } catch {}
                        Start-Sleep -Seconds 2
                    } while ($attempt -lt 30)
                    Write-Error "Grid –Ω–µ —Å—Ç–∞–ª ready –∑–∞ 60 —Å"
                    exit 1
                    '''
                }
            }
        }

        stage('Clean Build') {
            steps {
                echo 'üßπ –í—ã–ø–æ–ª–Ω—è–µ–º gradle clean...'
                bat 'call .\\gradlew clean --no-daemon --gradle-user-home=%GRADLE_USER_HOME%'

                echo 'üßπ –û—á–∏—â–∞–µ–º allure-results...'
                bat '''
                if exist build\\allure-results (
                    del /q build\\allure-results\\*
                )
                '''
            }
        }

        stage('UI Tests') {
            steps {
                echo 'üß™ –ó–∞–ø—É—Å–∫–∞–µ–º UI —Ç–µ—Å—Ç—ã –Ω–∞ Grid...'
                bat '''
                call .\\gradlew uiTest --console=plain --no-daemon ^
                -Dwebdriver.remote.url=%GRID_URL% ^
                --gradle-user-home=%GRADLE_USER_HOME%
                '''
            }
        }

        stage('API Tests') {
            steps {
                echo 'üåê –ó–∞–ø—É—Å–∫–∞–µ–º API —Ç–µ—Å—Ç—ã...'
                bat 'call .\\gradlew apiTest --console=plain --no-daemon --gradle-user-home=%GRADLE_USER_HOME%'
            }
        }

        stage('Allure Report') {
            steps {
                echo 'üìä –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Allure –æ—Ç—á—ë—Ç...'
                bat 'call .\\gradlew allureReport --console=plain --no-daemon --gradle-user-home=%GRADLE_USER_HOME%'
            }
        }

        stage('Publish Report') {
            steps {
                echo 'üì§ –ü—É–±–ª–∏–∫—É–µ–º Allure –æ—Ç—á—ë—Ç...'
                allure includeProperties: false, jdk: '', results: [[path: 'build/allure-results']]
            }
        }
    }

    post {
        always {
            echo 'üì¶ –ê—Ä—Ö–∏–≤–∏—Ä—É–µ–º JUnit –∏ Allure HTML –æ—Ç—á—ë—Ç...'
            junit testResults: '**/build/test-results/test/*.xml', allowEmptyResults: true, skipMarkingBuildUnstable: true
            archiveArtifacts artifacts: 'build/allure-report/**', allowEmptyArchive: true
        }

        cleanup {
            echo 'üßπ –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Selenium Grid...'
            bat 'docker compose -f docker-compose.yml down --remove-orphans || exit 0'
        }
    }
}
