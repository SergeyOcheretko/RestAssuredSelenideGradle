name: CI — UI & API Tests with Allure

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  prepare-allure-cli:
    runs-on: windows-latest
    steps:
      - name: 📦 Download Allure CLI
        shell: pwsh
        run: |
          $version = "2.27.0"
          $url = "https://github.com/allure-framework/allure2/releases/download/$version/allure-$version.zip"
          Invoke-WebRequest -Uri $url -OutFile allure.zip
          Expand-Archive allure.zip -DestinationPath allure

      - name: 📤 Upload Allure CLI
        uses: actions/upload-artifact@v4
        with:
          name: allure-cli
          path: allure

  ui-tests:
    runs-on: windows-latest
    needs: prepare-allure-cli
    strategy:
      matrix:
        browser: [ chrome, firefox ]
      fail-fast: false

    env:
      JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
      GRADLE_USER_HOME: C:\temp\gradle-cache
      BROWSER: ${{ matrix.browser }}

    name: UI Tests — ${{ matrix.browser }}
    steps:
      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🧹 Clean build + clear allure-results
        shell: pwsh
        run: |
          ./gradlew clean --no-daemon --gradle-user-home="$env:GRADLE_USER_HOME"
          Remove-Item -Path "build\allure-results" -Recurse -Force -ErrorAction SilentlyContinue
          New-Item -ItemType Directory -Path "build/allure-results" -Force

      - name: 🧪 Run UI tests
        run: ./gradlew uiTest --console=plain --no-daemon --gradle-user-home=%GRADLE_USER_HOME%
        env:
          BROWSER: ${{ matrix.browser }}

      - name: 🧩 Inject categories.json for Allure
        shell: pwsh
        run: |
          copy src/test/resources/categories.json build/allure-results/categories.json

      - name: 📊 Generate Allure report
        run: ./gradlew allureReport --console=plain --no-daemon --gradle-user-home=%GRADLE_USER_HOME%

      - name: 📤 Upload Allure HTML
        uses: actions/upload-artifact@v4.3.1
        with:
          name: allure-report-${{ matrix.browser }}
          path: build/reports/allure-report/allureReport

      - name: 📦 Archive JUnit results
        uses: actions/upload-artifact@v4
        with:
          name: junit-results-${{ matrix.browser }}
          path: |
            **/test-results/**/*.xml

  api-tests:
    runs-on: windows-latest
    needs: prepare-allure-cli

    env:
      JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
      GRADLE_USER_HOME: C:\temp\gradle-cache

    steps:
      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🌐 Run API tests
        run: ./gradlew apiTest --console=plain --no-daemon --gradle-user-home=%GRADLE_USER_HOME%

      - name: 🧩 Inject categories.json for Allure
        shell: pwsh
        run: |
          copy src/test/resources/categories.json build/allure-results/categories.json

      - name: 📦 Download Allure CLI artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-cli
          path: allure

      - name: 🔗 Add CLI to PATH
        shell: pwsh
        run: |
          $env:PATH += ";$PWD\\allure\\bin"

      - name: 📊 Generate Allure report
        run: ./gradlew allureReport --console=plain --no-daemon --gradle-user-home=%GRADLE_USER_HOME%

      - name: 📤 Upload Allure HTML
        uses: actions/upload-artifact@v4.3.1
        with:
          name: allure-report-api
          path: build/reports/allure-report/allureReport

      - name: 📦 Archive JUnit results
        uses: actions/upload-artifact@v4
        with:
          name: junit-results-api
          path: |
            **/test-results/**/*.xml

  deploy-report:
    runs-on: windows-latest
    if: always()
    needs: [ prepare-allure-cli, ui-tests, api-tests ]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Download Allure reports
        uses: actions/download-artifact@v4
        with:
          pattern: allure-report-*
          path: merged/allure-input

      - name: 📦 Download Allure CLI artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-cli
          path: allure

      - name: 🔗 Add CLI to PATH
        shell: pwsh
        run: |
          $env:PATH += ";$PWD\\allure\\bin"

      - name: 🧬 Merge Allure HTML reports
        shell: pwsh
        run: |
          $inputDirs = Get-ChildItem -Directory -Path merged/allure-input | Select-Object -ExpandProperty FullName
          allure generate $inputDirs --clean -o build/reports/allure-report/allureReport

      - name: 🚀 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.GH_PAGES_TOKEN }}
          publish_dir: build/reports/allure-report/allureReport
