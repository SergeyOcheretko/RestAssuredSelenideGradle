name: Run UI/API Tests and Generate Allure Report

on:
  workflow_dispatch:

jobs:
  run-tests:
    name: Run Tests on ${{ matrix.browser }}
    runs-on: windows-latest
    strategy:
      matrix:
        browser: [chrome, firefox, api]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Execute Gradle Tests
        run: ./gradlew clean test -Dselenide.browser=${{ matrix.browser }}

      - name: Generate executor.json
        shell: pwsh
        run: |
          $json = @{
            name = "${{ matrix.browser }} tests"
            type = "GitHub Actions"
            url  = "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            buildOrder = 1
          } | ConvertTo-Json -Depth 2
          Set-Content -Path "build/allure-results/executor.json" -Value $json -Encoding UTF8

      - name: Generate environment.properties
        shell: pwsh
        run: |
          @"
  OS=${{ runner.os }}
  Browser=${{ matrix.browser }}
  TestEnv=QA
  "@ | Set-Content build/allure-results/environment.properties -Encoding UTF8

      - name: Upload Results as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.browser }}
          path: build/allure-results

  merge-and-report:
    name: Merge Results and Generate Report
    runs-on: windows-latest
    needs: run-tests

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: allure-results-*
          path: merged/allure-results

      - name: Flatten Structure
        shell: pwsh
        run: |
          Get-ChildItem merged/allure-results -Directory | ForEach-Object {
            $target = $_.FullName
            $nested = Join-Path $target "build/allure-results"
  if (Test-Path $nested) {
Write-Host "ðŸ“¦ Flattening: $($nested)"
  Move-Item "$nested/*" $target -Force
  Remove-Item $nested -Recurse -Force
}
}

- name: ðŸ“‚ Validate executor.json files
  shell: pwsh
  run: |
    Get-ChildItem -Recurse -Path merged/allure-results -Filter executor.json |
    ForEach-Object {
      Write-Host "Found executor.json: $($_.FullName)"
      $content = Get-Content $_.FullName -Encoding UTF8 | Out-String
      $json = $content | ConvertFrom-Json
      Write-Host "Name: $($json.name), Type: $($json.type), URL: $($json.url), Order: $($json.buildOrder)"
    }

- name: ðŸ§ª Verify inputDirs
  shell: pwsh
  run: |
    Get-ChildItem -Directory -Path merged/allure-results | ForEach-Object {
      Write-Host "InputDir: $($_.FullName)"
    }

- name: Generate Allure Report
  shell: pwsh
  run: |
    $inputDirs = Get-ChildItem -Directory -Path merged/allure-results | Select-Object -ExpandProperty FullName
    allure generate $inputDirs --clean -o build/report-test

- name: Inject final executor.json (for GitHub Pages)
  shell: pwsh
  run: |
    $json = @"
    {
      "name": "Merged Report",
      "type": "GitHub Actions",
      "url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}",
      "buildOrder": 10
    }
    "@
    Set-Content -Path "build/report-test/executor.json" -Value $json -Encoding UTF8

- name: Deploy to GitHub Pages
  uses: peaceiris/actions-gh-pages@v4
  with:
    personal_token: ${{ secrets.GH_PAGES_TOKEN }}
    publish_dir: build/report-test
