name: CI — UI & API Tests with Allure (clickable executors)

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  prepare-allure-cli:
    runs-on: windows-latest
    steps:
      - name: 📦 Download Allure CLI
        shell: pwsh
        run: |
          $version = "2.27.0"
          $url = "https://github.com/allure-framework/allure2/releases/download/$version/allure-$version.zip"
          Invoke-WebRequest -Uri $url -OutFile allure.zip
          Expand-Archive allure.zip -DestinationPath allure
          Move-Item allure/allure-$version/* allure/ -Force
          Remove-Item allure/allure-$version -Recurse -Force

      - name: 📤 Upload Allure CLI
        uses: actions/upload-artifact@v4
        with:
          name: allure-cli
          path: allure
          retention-days: 7

  ui-tests:
    runs-on: windows-latest
    needs: prepare-allure-cli
    strategy:
      matrix:
        browser: [ chrome, firefox ]
      fail-fast: false
    name: UI Tests — ${{ matrix.browser }}
    env:
      JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
      GRADLE_USER_HOME: C:\temp\gradle-cache
      BROWSER: ${{ matrix.browser }}
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: actions/checkout@v4

      - name: 🧪 Run UI tests
        shell: pwsh
        run: ./gradlew uiTest${{ matrix.browser }} --no-daemon --console=plain --gradle-user-home="$env:GRADLE_USER_HOME"

      - name: ❌ Fail if no Allure results
        shell: pwsh
        run: |
          $dir = "build/allure-results-${{ matrix.browser }}"
          if ((Get-ChildItem $dir -Filter *.json).Count -eq 0) {
            Write-Error "❌ No allure result files found in $dir"; exit 1
          }

      - name: 🧩 Inject categories.json
        shell: pwsh
        run: copy src/test/resources/categories.json build/allure-results-${{ matrix.browser }}/categories.json

      - name: 🧬 Inject environment.properties
        shell: pwsh
        run: |
          @"
          Browser=${{ matrix.browser }}
          Job=UI-${{ matrix.browser }}
          OS=${{ runner.os }}
          CI=GitHub Actions
          "@ | Out-File build/allure-results-${{ matrix.browser }}/environment.properties -Encoding UTF8

      - name: 🆔 Get numeric job id
        id: job
        uses: actions/github-script@v7
        with:
          script: |
            const jobName = 'UI Tests — ${{ matrix.browser }}';
            const { data } = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId,
            });
            const job = data.jobs.find(j => j.name === jobName);
            core.setOutput('id', job.id);

      - name: 🧾 Inject executor.json
        shell: pwsh
        run: |
          $jobId = "${{ steps.job.outputs.id }}"
          $reportUrl = "https://${{ github.repository_owner }}.github.io/${{ github.repository }}"
          $buildName = "UI-${{ matrix.browser }} Tests"
          $buildOrder = $(if ("${{ matrix.browser }}" -eq 'chrome') {1} else {2})
          $json = @"
          {
            "name": "UI-${{ matrix.browser }}",
            "type": "github",
            "buildUrl": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs/$jobId",
            "buildOrder": $buildOrder,
            "buildName": "$buildName",
            "reportUrl": "$reportUrl",
            "status": "passed"
          }
          "@
          $json | Out-File -FilePath build/allure-results-${{ matrix.browser }}/executor.json -Encoding utf8 -NoNewline

      - name: 📦 Upload UI results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-${{ matrix.browser }}
          path: build/allure-results-${{ matrix.browser }}
          retention-days: 7

  api-tests:
    runs-on: windows-latest
    needs: prepare-allure-cli
    name: API Tests
    env:
      JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
      GRADLE_USER_HOME: C:\temp\gradle-cache
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: actions/checkout@v4

      - name: 🧪 Run API tests
        shell: pwsh
        run: ./gradlew apiTestRun --no-daemon --console=plain --gradle-user-home="$env:GRADLE_USER_HOME"

      - name: ❌ Fail if no Allure results
        shell: pwsh
        run: |
          if ((Get-ChildItem build/allure-results-api -Filter *.json).Count -eq 0) {
            Write-Error "❌ No allure result files found in build/allure-results-api"; exit 1
          }

      - name: 🧩 Inject categories.json
        shell: pwsh
        run: copy src/test/resources/categories.json build/allure-results-api/categories.json

      - name: 🧬 Inject environment.properties
        shell: pwsh
        run: |
          @"
          Job=API
          OS=${{ runner.os }}
          CI=GitHub Actions
          "@ | Out-File build/allure-results-api/environment.properties -Encoding UTF8

      - name: 🆔 Get numeric job id
        id: job
        uses: actions/github-script@v7
        with:
          script: |
            const jobName = 'API Tests';
            const { data } = await github.rest.actions.listJobsForWorkflowRun({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId,
            });
            const job = data.jobs.find(j => j.name === jobName);
            core.setOutput('id', job.id);

      - name: 🧾 Inject executor.json
        shell: pwsh
        run: |
          $jobId = "${{ steps.job.outputs.id }}"
          $reportUrl = "https://${{ github.repository_owner }}.github.io/${{ github.repository }}"
          $json = @"
          {
            "name": "API",
            "type": "github",
            "buildUrl": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs/$jobId",
            "buildOrder": 3,
            "buildName": "API Tests",
            "reportUrl": "$reportUrl",
            "status": "passed"
          }
          "@
          $json | Out-File -FilePath build/allure-results-api/executor.json -Encoding utf8 -NoNewline

      - name: 📦 Upload API results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results-api
          path: build/allure-results-api
          retention-days: 7

  deploy-report:
    runs-on: windows-latest
    if: always()
    needs: [ prepare-allure-cli, ui-tests, api-tests ]
    steps:
      - uses: actions/checkout@v4

      - name: 🧹 Clean previous report
        shell: pwsh
        run: Remove-Item -Recurse -Force build/reports/allure-report -ErrorAction SilentlyContinue

      - name: 📦 Download results
        uses: actions/download-artifact@v4
        with:
          pattern: allure-results-*
          path: results
          merge-multiple: false

      - name: 📦 Download CLI
        uses: actions/download-artifact@v4
        with:
          name: allure-cli
          path: allure

      - name: 📂 List downloaded results
        shell: pwsh
        run: Get-ChildItem results -Recurse

      - name: 🔗 Generate report
        shell: pwsh
        run: |
          $allureBin = "$env:GITHUB_WORKSPACE\allure\bin\allure.bat"
          $inputDirs = Get-ChildItem -Directory "$env:GITHUB_WORKSPACE\results" -Filter allure-results-* | Select-Object -ExpandProperty FullName
          if (-not $inputDirs) {
            Write-Error "❌ Не найдены папки allure-results-* в results"; exit 1
          }
          Write-Host "✅ Генерируем из:"
          $inputDirs | ForEach-Object { Write-Host "→ $_" }
          & $allureBin generate $inputDirs -o build/reports/allure-report --clean

      - name: 💾 Upload merged Allure Report
        uses: actions/upload-artifact@v4
        with:
          name: merged-allure-report
          path: build/reports/allure-report
          retention-days: 7

      - name: 🚀 Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          personal_token: ${{ secrets.GH_PAGES_TOKEN }}
          publish_dir: build/reports/allure-report

      - name: 🔗 Echo report link
        shell: pwsh
        run: |
          $repo = "${{ github.repository }}"
          $owner = "${{ github.repository_owner }}"
          Write-Host "✅ Allure report available at: https://$owner.github.io/$repo"
