name: CI ‚Äî UI & API Tests with Allure

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: windows-latest

    env:
      JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
      GRADLE_USER_HOME: C:\temp\gradle-cache

    steps:
      # 1. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º JDK 17 (—Ñ–∏–∫—Å ¬´invalid source release: 17¬ª)
      - name: ‚òï Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: üì• Checkout code
        uses: actions/checkout@v4

      # 2. –ß–∏—Å—Ç—ã–π gradle clean + –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ allure-results
      - name: üßπ Clean build + clear allure-results
        shell: pwsh
        run: |
          ./gradlew clean --no-daemon --gradle-user-home="$env:GRADLE_USER_HOME"
          Remove-Item -Path "build\allure-results" -Recurse -Force -ErrorAction SilentlyContinue
          New-Item -ItemType Directory -Path "build\allure-results" -Force

      - name: üß™ Run UI tests
        run: ./gradlew uiTest --console=plain --no-daemon --gradle-user-home=%GRADLE_USER_HOME%

      - name: üåê Run API tests
        run: ./gradlew apiTest --console=plain --no-daemon --gradle-user-home=%GRADLE_USER_HOME%

      - name: üß© Inject categories.json for Allure
        shell: pwsh
        run: |
          @"
          [
            { "name": "Registration Error",   "matchedStatuses": ["failed"], "matchedMessageRegex": ".*Username.*must be at least.*|.*cannot start or end with a hyphen.*|.*Password.*too short.*|.*Registration.*failed.*" },
            { "name": "Login Error",          "matchedStatuses": ["failed"], "matchedMessageRegex": ".*Login.*failed.*|.*incorrect password.*|.*user not found.*|.*unauthorized.*" },
            { "name": "Note Operation Error", "matchedStatuses": ["failed"], "matchedMessageRegex": ".*note.*does not exist.*|.*invalid category.*|.*forbidden.*|.*Note creation failed.*" },
            { "name": "Validation Error",     "matchedStatuses": ["failed"], "matchedMessageRegex": ".*is invalid.*|.*must be at least.*|.*required field.*|.*format is incorrect.*" },
            { "name": "Duplicate Data",       "matchedStatuses": ["failed"], "matchedMessageRegex": ".*already exists.*|.*duplicate.*|.*conflict.*" },
            { "name": "Empty Request",        "matchedStatuses": ["failed"], "matchedMessageRegex": ".*empty body.*|.*missing fields.*|.*no content.*" },
            { "name": "Content-Type Mismatch","matchedStatuses": ["failed"], "matchedMessageRegex": ".*unsupported media type.*|.*Content-Type.*not allowed.*|.*header mismatch.*" },
            { "name": "Authorization Failure","matchedStatuses": ["failed"], "matchedMessageRegex": ".*401 Unauthorized.*|.*Access denied.*|.*expired token.*|.*unauthenticated.*" },
            { "name": "UI Assertion Mismatch","matchedStatuses": ["failed"], "matchedMessageRegex": ".*expected.*but was.*|.*element not found.*|.*FlashMessage.*|.*invalid label.*" },
            { "name": "Server Error",         "matchedStatuses": ["broken"],"matchedMessageRegex": ".*500 Internal Server Error.*|.*unexpected error.*|.*exception.*|.*service unavailable.*" }
          ]
          "@ | Out-File -FilePath "build\allure-results\categories.json" -Encoding utf8NoBOM

      - name: üìä Generate Allure report
        run: ./gradlew allureReport --console=plain --no-daemon --gradle-user-home=%GRADLE_USER_HOME%

      - name: üì§ Upload Allure HTML
        uses: actions/upload-artifact@v4.3.1
        with:
          name: allure-report
          path: build/allure-report

      - name: üì¶ Archive JUnit results
        uses: actions/upload-artifact@v4
        with:
          name: junit-results
          path: '**/build/test-results/test/*.xml'